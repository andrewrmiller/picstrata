#!/bin/bash

usage() {
	echo
	echo "pstdb - Picstrata database management utility."
	echo
	echo "Usage:"
	echo
	echo "   pstdb <command>"
	echo 
	echo "Available commands:"
	echo
	echo "   create             Create a new Picstrata database."
	echo "   migrate            Migrate a Picstrata database to the current version."
	echo "   delete             Delete a Picstrata database."
	echo "   recreate           Delete the Picstrata database then create a new database."
	echo
	echo "Requirements:"
	echo
	echo "   MySQL              https://www.mysql.com"
	echo "   Flyway CLI         https://flywaydb.org/documentation/commandline"
	echo
}

if [ "$PST_DATABASE_HOST" == "" ] || [ "$PST_DATABASE_USER" == "" ]; then
	echo Error: Missing PST_DATABASE_HOST and/or PST_DATABASE_USER environment variable.
	exit 1
fi

DATABASE_HOST=$PST_DATABASE_HOST


# The name of the database to initialize.
DATABASE_NAME=picstrata

# The name of the login-path to use.
LOGIN_PATH=pstadmin

# The name of the MySQL user that will be used by the web app
# to access the database.
USER=$PST_DATABASE_USER

# JDBC needs to know the time zone of the MySQL server.
SERVER_TIMEZONE=America/Los_Angeles

# The JDBC connection URL for the database.
JDBC_CONNECT_URL="jdbc:mysql://$DATABASE_HOST/$DATABASE_NAME?useUnicode=true&useSSL=false&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=$SERVER_TIMEZONE"

# The MySQL CLI command.
MYSQL="mysql --login-path=$LOGIN_PATH "

FLYWAY=/usr/local/bin/flyway

createDb() {
	CREATESCRIPT=~/tmp/create_picstrata_db.sql
	INITIALIZESCRIPT=~/tmp/initialize_picstrata_db.sql
	SRCDIR="$( pwd )"

	# Check to make sure that the database doesn't already exist.
	if ($MYSQL -e "SELECT schema_name FROM information_schema.schemata WHERE schema_name='$DATABASE_NAME'" | grep $DATABASE_NAME 1>/dev/null); then
		echo
		echo ERROR: MySQL database \'$DATABASE_NAME\' already exists.
		echo
		return
	fi

	if [ ! -d ~/tmp ]; then
	echo 'dir not found'
	mkdir ~/tmp
	fi

	(echo SET @db_name=\'$DATABASE_NAME\'\;) > $CREATESCRIPT
	(echo SET @user_name=\'\\\'$USER\\\'@\\\'%\\\'\'\;) >> $CREATESCRIPT
	(cat $SRCDIR/init/create_db.sql; echo) >> $CREATESCRIPT

	# Need to set this option to avoid a MySQL whine about not having some
	# declarations in our stored procedures.  See this article:
	# https://stackoverflow.com/questions/26015160.
	(echo 'SET GLOBAL log_bin_trust_function_creators = 1;') > $INITIALIZESCRIPT;

	# We need to deploy in two steps because MySQL's 
	# USE statement does not allow a variable name.
	echo Creating database $DATABASE_NAME...
	$MYSQL < $CREATESCRIPT

	echo Initializing database...
	$MYSQL $DATABASE_NAME < $INITIALIZESCRIPT

	echo Migrating database...
	migrateDb
}


migrateDb() {
	# Pull the admin user and password out of the config.
	ADMIN_USER=$(my_print_defaults -s $LOGIN_PATH | grep user | cut -d "=" -f 2)
	ADMIN_PASSWORD=$(my_print_defaults -s $LOGIN_PATH | grep password | cut -d "=" -f 2)

	# Tell flyway to migrate the database.
	$FLYWAY migrate \
		-url="$JDBC_CONNECT_URL" \
		-user=$ADMIN_USER \
		-password=$ADMIN_PASSWORD \
		-table="pst_schema_history" \
		-locations=filesystem:./migrate
}

deleteDb() {

	echo
	echo Are you sure that you want to delete the $DATABASE_NAME MySQL database.
	echo
	echo WARNING: This operation is irreversible.
	echo

	OPTIONS="Yes No"
	select opt in $OPTIONS; do
		if [ "$opt" = "Yes" ]; then
			echo Deleting database...
			break
		elif [ "$opt" = "No" ]; then
			echo Operation aborted.
			return 1
		else
			echo Bad selection.
			return 2
		fi
	done

	$MYSQL -e "DROP DATABASE $DATABASE_NAME"
	return 0
}

recreateDb() {
	if deleteDb 0 ; then
		createDb
	else
		return 1
	fi
}

# Change to the root of the database directory.
pushd "$( dirname "$0" )"/../db > /dev/null

case "$1" in 
create)
	createDb
	;;
migrate)
	migrateDb
	;;
delete)
	deleteDb
	;;
recreate)
	recreateDb
	;;

*)
	usage
	;;
esac

popd > /dev/null